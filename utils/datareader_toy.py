# import sys
# from collections import Counter
# from itertools import chain
# from typing import List
# import pandas as pd
# import json
# import csv

# import matplotlib.pyplot as plt

import numpy as np
import cv2
import os
import imageio
from torch.utils.data import Dataset


DATA_PATH = "../data/toydataset/" #path to data stored
# DATA_VERSION = 'v1.0-mini'
# NUM_AGENTS = 2
# TRAJECTORY_TIME_INTERVAL = 6 #length (in time) per data point


class toyScenesdata(Dataset):

    def __init__(self):        

        #read the scenes and trajectory arrays generated by the toy dataset
        self.scenes = os.listdir(DATA_PATH)
        print("Read in %d " % (len(self.scenes)))

    def __len__(self):
        return len(self.scenes) #return length of labels or input should be the same

    def __getitem__(self, test_idx):
        
        #get the scene
        scene = self.scenes[test_idx]        

        

        coords = np.load(DATA_PATH+scene+"/ls.npy", allow_pickle=True)
        env_map = np.array(cv2.imread(DATA_PATH+scene+"/scene.png"))
        gt = np.load(DATA_PATH+scene+"/init.npy", allow_pickle=True)
        #Initialise dictionary for returning data
        output_data = {"map":env_map, "coords": coords, "ground_truth":gt}        
        return output_data




